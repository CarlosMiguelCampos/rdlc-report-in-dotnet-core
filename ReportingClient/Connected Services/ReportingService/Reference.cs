//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data;

namespace ReportingService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReportingService.IReportingService")]
    public interface IReportingService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportingService/Generate", ReplyAction="http://tempuri.org/IReportingService/GenerateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ReportingService.GenerateResponse> GenerateAsync(ReportingService.GenerateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportingService/ExportWithDataTables", ReplyAction="http://tempuri.org/IReportingService/ExportWithDataTablesResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ReportingService.ExportWithDataTablesResponse> ExportWithDataTablesAsync(ReportingService.ExportWithDataTablesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportingService/ExportWithDataTablesAndParameters", ReplyAction="http://tempuri.org/IReportingService/ExportWithDataTablesAndParametersResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ReportingService.ExportWithDataTablesAndParametersResponse> ExportWithDataTablesAndParametersAsync(ReportingService.ExportWithDataTablesAndParametersRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Reporting")]
    public partial class ReportContentResult
    {
        
        private byte[] contentField;
        
        private string mimeTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true, Order=0)]
        public byte[] Content
        {
            get
            {
                return this.contentField;
            }
            set
            {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string MimeType
        {
            get
            {
                return this.mimeTypeField;
            }
            set
            {
                this.mimeTypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Generate", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GenerateRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] fileDefinition;
        
        public GenerateRequest()
        {
        }
        
        public GenerateRequest(byte[] fileDefinition)
        {
            this.fileDefinition = fileDefinition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GenerateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GenerateResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ReportingService.ReportContentResult GenerateResult;
        
        public GenerateResponse()
        {
        }
        
        public GenerateResponse(ReportingService.ReportContentResult GenerateResult)
        {
            this.GenerateResult = GenerateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExportWithDataTables", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExportWithDataTablesRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] fileDefinition;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DataSet dataTablesAsDataSource;
        
        public ExportWithDataTablesRequest()
        {
        }
        
        public ExportWithDataTablesRequest(byte[] fileDefinition, DataSet dataTablesAsDataSource)
        {
            this.fileDefinition = fileDefinition;
            this.dataTablesAsDataSource = dataTablesAsDataSource;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExportWithDataTablesResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExportWithDataTablesResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ReportingService.ReportContentResult ExportWithDataTablesResult;
        
        public ExportWithDataTablesResponse()
        {
        }
        
        public ExportWithDataTablesResponse(ReportingService.ReportContentResult ExportWithDataTablesResult)
        {
            this.ExportWithDataTablesResult = ExportWithDataTablesResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
    public partial class ArrayOfDataTableDataTable
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class ExportWithDataTablesAndParametersParameters
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExportWithDataTablesAndParameters", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExportWithDataTablesAndParametersRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] fileDefinition;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("DataTable", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
        public ReportingService.ArrayOfDataTableDataTable[] dataTablesAsDataSource;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ReportingService.ExportWithDataTablesAndParametersParameters parameters;
        
        public ExportWithDataTablesAndParametersRequest()
        {
        }
        
        public ExportWithDataTablesAndParametersRequest(byte[] fileDefinition, ReportingService.ArrayOfDataTableDataTable[] dataTablesAsDataSource, ReportingService.ExportWithDataTablesAndParametersParameters parameters)
        {
            this.fileDefinition = fileDefinition;
            this.dataTablesAsDataSource = dataTablesAsDataSource;
            this.parameters = parameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExportWithDataTablesAndParametersResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExportWithDataTablesAndParametersResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ReportingService.ReportContentResult ExportWithDataTablesAndParametersResult;
        
        public ExportWithDataTablesAndParametersResponse()
        {
        }
        
        public ExportWithDataTablesAndParametersResponse(ReportingService.ReportContentResult ExportWithDataTablesAndParametersResult)
        {
            this.ExportWithDataTablesAndParametersResult = ExportWithDataTablesAndParametersResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public interface IReportingServiceChannel : ReportingService.IReportingService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public partial class ReportingServiceClient : System.ServiceModel.ClientBase<ReportingService.IReportingService>, ReportingService.IReportingService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ReportingServiceClient() : 
                base(ReportingServiceClient.GetDefaultBinding(), ReportingServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IReportingService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ReportingServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ReportingServiceClient.GetBindingForEndpoint(endpointConfiguration), ReportingServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ReportingServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ReportingServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ReportingServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ReportingServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ReportingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportingService.GenerateResponse> ReportingService.IReportingService.GenerateAsync(ReportingService.GenerateRequest request)
        {
            return base.Channel.GenerateAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportingService.GenerateResponse> GenerateAsync(byte[] fileDefinition)
        {
            ReportingService.GenerateRequest inValue = new ReportingService.GenerateRequest();
            inValue.fileDefinition = fileDefinition;
            return ((ReportingService.IReportingService)(this)).GenerateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportingService.ExportWithDataTablesResponse> ReportingService.IReportingService.ExportWithDataTablesAsync(ReportingService.ExportWithDataTablesRequest request)
        {
            return base.Channel.ExportWithDataTablesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportingService.ExportWithDataTablesResponse> ExportWithDataTablesAsync(byte[] fileDefinition, DataSet dataTablesAsDataSource)
        {
            ReportingService.ExportWithDataTablesRequest inValue = new ReportingService.ExportWithDataTablesRequest();
            inValue.fileDefinition = fileDefinition;
            inValue.dataTablesAsDataSource = dataTablesAsDataSource;
            return ((ReportingService.IReportingService)(this)).ExportWithDataTablesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReportingService.ExportWithDataTablesAndParametersResponse> ReportingService.IReportingService.ExportWithDataTablesAndParametersAsync(ReportingService.ExportWithDataTablesAndParametersRequest request)
        {
            return base.Channel.ExportWithDataTablesAndParametersAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReportingService.ExportWithDataTablesAndParametersResponse> ExportWithDataTablesAndParametersAsync(byte[] fileDefinition, ReportingService.ArrayOfDataTableDataTable[] dataTablesAsDataSource, ReportingService.ExportWithDataTablesAndParametersParameters parameters)
        {
            ReportingService.ExportWithDataTablesAndParametersRequest inValue = new ReportingService.ExportWithDataTablesAndParametersRequest();
            inValue.fileDefinition = fileDefinition;
            inValue.dataTablesAsDataSource = dataTablesAsDataSource;
            inValue.parameters = parameters;
            return ((ReportingService.IReportingService)(this)).ExportWithDataTablesAndParametersAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IReportingService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IReportingService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:26219/Services/ReportingService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ReportingServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IReportingService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ReportingServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IReportingService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IReportingService,
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil-lib", "2.0.0.1")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable
    {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement()
        {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes
        {
            get
            {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema()
        {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer)
        {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            )
            {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader)
        {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            )
            {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element))
                {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else
                {
                    reader.Skip();
                }
            }
        }
    }
}
